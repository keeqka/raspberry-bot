name: ðŸš€ Deploy Telegram Bot via Cloudflare Tunnel

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for ARM
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -t telegram-echo-bot:latest \
            --load .

      - name: Save image to tar
        run: docker save telegram-echo-bot:latest -o telegram-echo-bot.tar

      - name: Copy image to Raspberry Pi via SSH (through Cloudflare Tunnel)
        run: |
          echo "${{ secrets.PI_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -o ProxyCommand="cloudflared access ssh --hostname ${{ secrets.PI_HOST }}" \
              -i key.pem -p 22 ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} \
              "mkdir -p ~/bot && cat > ~/bot/telegram-echo-bot.tar" < telegram-echo-bot.tar
          rm key.pem

      - name: Deploy container on Raspberry Pi
        run: |
          echo "${{ secrets.PI_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -o ProxyCommand="cloudflared access ssh --hostname ${{ secrets.PI_HOST }}" \
              -i key.pem -p 22 ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} bash << 'ENDSSH'
            cd ~/bot
            docker stop telegram-echo-bot || true
            docker rm telegram-echo-bot || true
            docker rmi telegram-echo-bot:latest || true
            docker load -i telegram-echo-bot.tar
            docker run -d \
              --name telegram-echo-bot \
              --restart unless-stopped \
              -e BOT_TOKEN=$BOT_TOKEN \
              telegram-echo-bot:latest
ENDSSH
          rm key.pem